[{"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\reportWebVitals.js":"1","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\SidebarChat.js":"2","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\App.js":"3","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\index.js":"4","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Reducer.js":"5","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\StateProvider.js":"6","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Sidebar.js":"7","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Chat.js":"8","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Login.js":"9","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\firebase.js":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":2019,"mtime":1606371581338,"results":"13","hashOfConfig":"12"},{"size":807,"mtime":1606303625211,"results":"14","hashOfConfig":"12"},{"size":684,"mtime":1606302876704,"results":"15","hashOfConfig":"12"},{"size":423,"mtime":1606325020090,"results":"16","hashOfConfig":"12"},{"size":386,"mtime":1606301296921,"results":"17","hashOfConfig":"12"},{"size":2143,"mtime":1606305390816,"results":"18","hashOfConfig":"12"},{"size":3860,"mtime":1606368893375,"results":"19","hashOfConfig":"12"},{"size":8560,"mtime":1606305175036,"results":"20","hashOfConfig":"12"},{"size":730,"mtime":1606411873455,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"r7x2g5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\reportWebVitals.js",[],["45","46"],"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\SidebarChat.js",["47","48"],"import { Avatar } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport db from './firebase'\r\nimport './SidebarChat.css'\r\nimport { useStatevalue } from './StateProvider'\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n    const [seed, setseed] = useState('')\r\n    const [messages, setMessages] = useState('')\r\n\r\n    const [{ user }, dispatch] = useStatevalue();\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            db.collection(\"rooms\")\r\n                .doc(id)\r\n                .collection(\"messages\")\r\n                .orderBy(\"timestamp\",\"desc\")\r\n                .onSnapshot((snapshot) => \r\n                    setMessages(snapshot.docs.map((doc) => doc.data()))\r\n                )\r\n        }\r\n    },[])\r\n\r\n\r\n    useEffect(() => {\r\n        setseed(Math.floor(Math.random() * 5000))\r\n    }, [])\r\n\r\n    const createChat = () => {\r\n        const roomName = prompt(\"Please Enter Name For Chat\")\r\n        \r\n        if (roomName) {\r\n            db.collection(\"rooms\").add({\r\n                name: roomName,\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    const createUser = () => {\r\n        const username = prompt(\"Please Enter User For Chat\")\r\n\r\n        if (username) {\r\n            db.collection(\"rooms\").add({\r\n                name: user.displayName,\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return !addNewChat ? (\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n            <div className=\"sidebarChat__info\">\r\n                <h2>{name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n        \r\n    ): (\r\n        \r\n        <div className=\"sidebarChat\" onClick={createChat}\r\n        >\r\n            <h2>Add Group Chat</h2>\r\n            <h2 onClick={createUser}>Add User for Chat</h2>\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\App.js",["49","50"],"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\index.js",[],"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Reducer.js",[],"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\StateProvider.js",[],"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Sidebar.js",["51"],"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Chat.js",["52","53"],"import { Avatar, IconButton } from '@material-ui/core'\r\nimport React,{ useEffect, useState }  from 'react'\r\nimport SearchIcon from \"@material-ui/icons/SearchOutlined\"\r\nimport AttachFile from \"@material-ui/icons/AttachFile\"\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\"\r\nimport InsertEmotionIcon from \"@material-ui/icons/InsertEmoticon\"\r\nimport MicIcon from \"@material-ui/icons/Mic\"\r\nimport './Chat.css'\r\nimport { useParams } from 'react-router-dom'\r\nimport firebase from 'firebase'\r\n\r\nimport { useStatevalue } from './StateProvider'\r\nimport db  from './firebase'\r\nimport { storage } from './firebase'\r\nfunction Chat() {\r\n    const [seed, setseed] = useState('')\r\n    const [input, setInput] = useState(\"\")\r\n    const [{ user }, dispatch] = useStatevalue();\r\n    const { roomId } = useParams()\r\n    const [roomName, setRoomName] = useState(\"\")\r\n    const [messages, SetMessages] = useState([])\r\n\r\n    \r\n    useEffect(() => {\r\n        if (roomId) {\r\n            db.collection('rooms').doc(roomId).onSnapshot((snapshot) => (\r\n                setRoomName(snapshot.data().name))\r\n            )\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy('timestamp','asc').onSnapshot(snapshot => (\r\n                SetMessages(snapshot.docs.map(doc => doc.data()))\r\n            ))\r\n           \r\n        }\r\n    }, [roomId])\r\n\r\n   \r\n\r\n    useEffect(() => {\r\n        setseed(Math.floor(Math.random() * 5000))\r\n    }, [roomId])\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n        console.log(\"You typed >>>>>\", input)\r\n\r\n\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n\r\n        })\r\n\r\n\r\n        setInput(\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last seen at {\" \"}\r\n                    {new Date(\r\n                        messages[messages.length - 1]?.timestamp?.toDate()\r\n                    ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className=\"chat__body\">\r\n                {messages.map(message => (\r\n                     <p className={`chat__messages ${message.name === user.displayName && \"chat__reciever\"}`}>\r\n                    <span className=\"chat__name\">{message.name}</span>\r\n                    {message.message}\r\n                    <span className=\"chat__timestamp\">\r\n                        {new Date(message.timestamp?.toDate()).toUTCString()}\r\n                    </span>\r\n                </p>\r\n                ))}\r\n                \r\n                   \r\n               \r\n               \r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmotionIcon />\r\n                <AttachFile />\r\n                <form>\r\n                \r\n                <input value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type a message\" type=\"text\"/>\r\n                <button onClick={sendMessage} type=\"submit\">Send a Message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","D:\\WhatsApp-Clone\\whatsapp-clone\\src\\Login.js",["54","55","56"],"D:\\WhatsApp-Clone\\whatsapp-clone\\src\\firebase.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":11,"column":22,"nodeType":"63","messageId":"64","endLine":11,"endColumn":30},{"ruleId":"65","severity":1,"message":"66","line":23,"column":7,"nodeType":"67","endLine":23,"endColumn":9,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"69","line":2,"column":17,"nodeType":"63","messageId":"64","endLine":2,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":10,"column":20,"nodeType":"63","messageId":"64","endLine":10,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":14,"column":22,"nodeType":"63","messageId":"64","endLine":14,"endColumn":30},{"ruleId":"61","severity":1,"message":"70","line":14,"column":10,"nodeType":"63","messageId":"64","endLine":14,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":18,"column":22,"nodeType":"63","messageId":"64","endLine":18,"endColumn":30},{"ruleId":"71","severity":1,"message":"72","line":8,"column":12,"nodeType":"73","messageId":"74","endLine":8,"endColumn":14},{"ruleId":"61","severity":1,"message":"75","line":9,"column":12,"nodeType":"63","messageId":"64","endLine":9,"endColumn":16},{"ruleId":"61","severity":1,"message":"76","line":9,"column":18,"nodeType":"63","messageId":"64","endLine":9,"endColumn":25},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'useState' is defined but never used.","'storage' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [id]",{"range":"82","text":"83"},[784,786],"[id]"]